# -*- coding: utf-8 -*-

"""
calculatorapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from calculatorapi.api_helper import APIHelper
from calculatorapi.configuration import Server
from calculatorapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from calculatorapi.http.http_method_enum import HttpMethodEnum


class SimpleCalculatorController(BaseController):

    """A Controller to access Endpoints in the calculatorapi API."""
    def __init__(self, config):
        super(SimpleCalculatorController, self).__init__(config)

    def calculate(self,
                  operation,
                  x,
                  y):
        """Does a GET request to /{operation}.

        Calculates the expression using the specified operation.

        Args:
            operation (OperationTypeEnum): The operator to apply on the
                variables
            x (float): The LHS Value
            y (float): The RHS Value

        Returns:
            float: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/{operation}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('operation')
                            .value(operation)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('x')
                         .value(x))
            .query_param(Parameter()
                         .key('y')
                         .value(y))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()
